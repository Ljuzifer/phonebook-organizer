{"version":3,"file":"static/js/545.1e9dfeff.chunk.js","mappings":"oVAKaA,EAAmBC,EAAAA,EAAiB;;;;4BAIrBC;;EAIfC,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoDxBC,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBCpDvB,SAASC,IAAe,IAADC,EAAAC,EACpC,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAA2B,QAArBT,EAAe,QAAfC,EAACK,EAASI,aAAK,IAAAT,OAAA,EAAdA,EAAgBU,YAAI,IAAAX,EAAAA,EAAI,MACjD,UAAEY,IAAcC,EAAAA,EAAAA,MAChBC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1BC,EAAiBH,EAAYI,MAAKC,GAAWA,EAAQC,MAAQR,IAC7DS,EAAwBP,EAAYQ,QACxCH,GAAWA,EAAQI,OAASN,EAAeM,OAGvCC,EAAgB,CACpBD,KAAMN,EAAiBA,EAAeM,KAAO,GAC7CE,MAAOR,EAAiBA,EAAeQ,MAAQ,IAsCjD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAC,SAAA,EACbF,EAAAA,EAAAA,MAAC7B,EAAU,CAACgC,GAAIrB,EAAgBsB,QAAQF,SAAA,EACtCG,EAAAA,EAAAA,KAACC,EAAAA,IAAqB,IAAG,eAG3BN,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAAAL,SAAA,EACFG,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAAAN,UACLG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,oBAGTG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,6BAEJG,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLX,cAAeA,EACfY,iBAAkBC,EAAAA,EAClBC,SAnDaC,IACnB,MAAMC,EAAiB,CACrBjB,KAAMgB,EAAOhB,KACbE,MAAOc,EAAOd,MACdb,aAGI6B,EAAaF,EAAOhB,KAExBF,EAAsBqB,MACpBvB,GAAWA,EAAQI,KAAKoB,gBAAkBF,EAAWE,gBAIvDC,EAAAA,GAAAA,QACE,SAASH,6CACT,CACEI,SAAU,IACVC,SAAU,gBAMhB5C,GAAS6C,EAAAA,EAAAA,IAAiBP,IAE1BI,EAAAA,GAAAA,QAAc,cAAcJ,EAAejB,mBAAoB,CAC7DsB,SAAU,IACVC,SAAU,eAEZE,YAAW,KACT5C,GAAU,EAAE,GACX,MAAK,EAmBqBwB,UAEvBF,EAAAA,EAAAA,MAAChC,EAAS,CAAAkC,SAAA,EACRF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,kBAELG,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CACJC,KAAK,OACL3B,KAAK,OACL4B,YAAa,GAAGlC,EAAeM,UAEjCQ,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAAC7B,KAAK,OAAO8B,UAAU,UAEtC3B,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,mBAELG,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CACJC,KAAK,MACL3B,KAAK,QACL4B,YAAa,GAAGlC,EAAeQ,WAEjCM,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAAC7B,KAAK,QAAQ8B,UAAU,UAEvCtB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAQtB,SAAC,0BAG1BG,EAAAA,EAAAA,KAACuB,EAAAA,GAAO,KACRvB,EAAAA,EAAAA,KAACxC,EAAgB,SAIzB,C,4EC7GO,MAAMyB,EAAiBN,GAASA,EAAM6C,SAASC,MAEzCC,EAAsB/C,GAASA,EAAM6C,SAASC,MAAME,OAMpDC,EAAejD,GAASA,EAAMY,OAE9BsC,GAAwBC,EAAAA,EAAAA,IACnC,CAAC7C,EAAgB2C,IACjB,CAACJ,EAAUO,IACTP,EAASjC,QAAOH,GACdA,EAAQI,KAAKoB,cAAcoB,SAASD,EAAYnB,kB,gDCd/C,MAAMN,EAAgB2B,EAAAA,KAAaC,MAAM,CAC9C1C,KAAMyC,EAAAA,KACHE,QACC,0GACA,qBAEDC,SAAS,kBACZ1C,MAAOuC,EAAAA,M","sources":["pages/ContactEdit.styled.js","pages/ContactEdit.jsx","redux/contacts/selectors.js","schemas/contactSchema.js"],"sourcesContent":["import { Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { createGlobalStyle, styled } from 'styled-components';\nimport editImage from '../images/contact_edit.jpg';\n\nexport const ContactEditStyle = createGlobalStyle`\nbody{\n    /* background-image: url('https://kartinki.pics/uploads/posts/2021-07/1625655312_1-kartinkin-com-p-biblioteka-art-art-krasivo-1.jpg'); */\n\n    background-image: url(${editImage});\n}\n`;\n\nexport const FormThumb = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  background-color: rgba(202, 202, 202, 0.8);\n  width: 480px;\n  margin: auto;\n  border: 2px outset black;\n  border-radius: 13px;\n  padding: 20px 28px;\n  margin-bottom: 28px;\n\n  button {\n    font-weight: bold;\n    margin-bottom: 28px;\n    padding: 4px 8px;\n    border-radius: 22px;\n    text-transform: uppercase;\n    background-color: rgba(144, 144, 144, 0.8);\n  }\n\n  button:hover,\n  button:focus {\n    background-color: black;\n    color: white;\n  }\n\n  label {\n    font-style: oblique;\n    font-weight: 500;\n    margin-bottom: 13px;\n\n    b {\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 500;\n      color: darkred;\n      text-transform: lowercase;\n    }\n\n    input {\n      margin-top: 8px;\n      width: 100%;\n      padding: 2px 13px;\n      border-radius: 13px;\n      outline: none;\n      text-align: center;\n      /* background-color: rgba(255, 255, 255, 0); */\n    }\n  }\n`;\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  color: midnightblue;\n  margin: 22px auto;\n  padding: 10px;\n  width: 780px;\n  height: fit-content;\n  border: 4px outset #000;\n  border-radius: 13px;\n  background-color: rgba(119, 136, 153, 0.8);\n  font-size: 22px;\n  font-weight: 700;\n  text-transform: uppercase;\n  letter-spacing: 1.02em;\n\n  &.active {\n    color: midnightblue;\n  }\n\n  svg {\n    width: 32px;\n    height: 32px;\n    margin-right: 8px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: rgba(119, 136, 153, 0.2);\n  }\n  /* h3 {\n    color: midnightblue;\n    border: 4px outset midnightblue;\n    background-color: lightgoldenrodyellow;\n    max-width: max-content;\n    border-radius: 8px;\n    padding-left: 8px;\n    padding-right: 8px;\n    margin: auto;\n    margin-bottom: 28px;\n  } */\n`;\n","import { useRef } from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { RiArrowLeftCircleFill } from 'react-icons/ri';\nimport { fetchEditContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { Box } from 'components/GlobalStyle';\nimport { ContactEditStyle, FormThumb, GoBackLink } from './ContactEdit.styled';\nimport { contactSchema } from 'schemas/contactSchema';\n\nexport default function ContactEdit() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n  const { contactId } = useParams();\n  const allContacts = useSelector(selectContacts);\n\n  const currentContact = allContacts.find(contact => contact._id === contactId);\n  const withoutCurrentContact = allContacts.filter(\n    contact => contact.name !== currentContact.name\n  );\n\n  const initialValues = {\n    name: currentContact ? currentContact.name : '',\n    phone: currentContact ? currentContact.phone : '',\n  };\n\n  const handleSubmit = values => {\n    const updatedContact = {\n      name: values.name,\n      phone: values.phone,\n      contactId,\n    };\n\n    const editedName = values.name;\n    if (\n      withoutCurrentContact.some(\n        contact => contact.name.toLowerCase() === editedName.toLowerCase()\n      )\n    ) {\n      // toast.dismiss(toastLoading);\n      toast.success(\n        `Oops! ${editedName} is already exists!!! Please change it...`,\n        {\n          duration: 2000,\n          position: 'top-center',\n        }\n      );\n      return;\n    }\n\n    dispatch(fetchEditContact(updatedContact));\n    // toast.dismiss(toastLoading);\n    toast.success(`Contact of ${updatedContact.name} is updated!`, {\n      duration: 2000,\n      position: 'top-center',\n    });\n    setTimeout(() => {\n      navigate(-1);\n    }, 2200);\n  };\n\n  return (\n    <HelmetProvider>\n      <GoBackLink to={backLocationRef.current}>\n        <RiArrowLeftCircleFill /> Go back\n      </GoBackLink>\n\n      <Box>\n        <Helmet>\n          <title>Edit contact</title>\n        </Helmet>\n\n        <h2>Let's edit your contact</h2>\n\n        <Formik\n          initialValues={initialValues}\n          validationSchema={contactSchema}\n          onSubmit={handleSubmit}\n        >\n          <FormThumb>\n            <label>\n              Contact's name\n              <Field\n                type=\"text\"\n                name=\"name\"\n                placeholder={`${currentContact.name}`}\n              />\n              <ErrorMessage name=\"name\" component=\"b\" />\n            </label>\n            <label>\n              Contact's phone\n              <Field\n                type=\"tel\"\n                name=\"phone\"\n                placeholder={`${currentContact.phone}`}\n              />\n              <ErrorMessage name=\"phone\" component=\"b\" />\n            </label>\n            <button type=\"submit\">Confirm changes</button>\n          </FormThumb>\n        </Formik>\n        <Toaster />\n        <ContactEditStyle />\n      </Box>\n    </HelmetProvider>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectTotalContacts = state => state.contacts.items.length;\n\nexport const selectContactsStatus = state => state.contacts.isLoading;\n\nexport const selectContactsError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterField) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterField.toLowerCase())\n    )\n);\n","import * as Yup from 'yup';\n\nexport const contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$/,\n      'Wrong name format'\n    )\n    .required('Must be filled'),\n  phone: Yup.string(),\n  // .matches(\n  //   /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n  //   'Wrong number format'\n  // )\n  // .required('Must be filled'),\n});\n"],"names":["ContactEditStyle","createGlobalStyle","editImage","FormThumb","styled","Form","GoBackLink","Link","ContactEdit","_location$state$from","_location$state","dispatch","useDispatch","navigate","useNavigate","location","useLocation","backLocationRef","useRef","state","from","contactId","useParams","allContacts","useSelector","selectContacts","currentContact","find","contact","_id","withoutCurrentContact","filter","name","initialValues","phone","_jsxs","HelmetProvider","children","to","current","_jsx","RiArrowLeftCircleFill","Box","Helmet","Formik","validationSchema","contactSchema","onSubmit","values","updatedContact","editedName","some","toLowerCase","toast","duration","position","fetchEditContact","setTimeout","Field","type","placeholder","ErrorMessage","component","Toaster","contacts","items","selectTotalContacts","length","selectFilter","selectVisibleContacts","createSelector","filterField","includes","Yup","shape","matches","required"],"sourceRoot":""}