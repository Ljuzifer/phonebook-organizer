{"version":3,"file":"static/js/314.cf32a91b.chunk.js","mappings":"uNAGO,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCGrC,MAAMC,EAAaC,EAAAA,GAAW,CAC5BC,MAAOD,EAAAA,KAAaC,QAAQC,SAAS,kBACrCC,SAAUH,EAAAA,KAAaI,IAAI,GAAGF,SAAS,oBAG5BG,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MAIjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAJkB,CAAET,MAAO,GAAIE,SAAU,IAKzCQ,iBAAkBZ,EAClBa,SAAUC,MAAOC,EAAQC,KACvB,UACQT,GAASU,EAAAA,EAAAA,IAAM,IAAKF,KAAWG,SACrCF,EAAQG,WAGV,CAFE,MAAOC,GACPC,QAAQD,MAAM,mBAAoBA,EACpC,GACAE,UAEFC,EAAAA,EAAAA,MAAC1B,EAAS,CAAC2B,aAAa,MAAKF,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELb,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,YAAY,sBAC7CnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CAACF,KAAK,QAAQG,UAAU,UAEvCP,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELb,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLC,YAAY,yBAEdnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CAACF,KAAK,WAAWG,UAAU,UAE1CrB,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAAQJ,SAAC,eAEjB,E,oDC3CAS,EAAmBC,EAAAA,EAAiB;;;;4BAIrBC;iBCFb,SAASC,IACtB,OACEzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAc,CAAAb,UACbC,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAAAd,SAAA,EACFb,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,CAAAf,UACLb,EAAAA,EAAAA,KAAA,SAAAa,SAAO,aAGTb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,gBACJb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,sCACJb,EAAAA,EAAAA,KAACH,EAAS,KAEVG,EAAAA,EAAAA,KAACsB,EAAgB,QAIzB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.styled.js","pages/Login.jsx"],"sourcesContent":["import { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormThumb = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  background-color: rgba(202, 202, 202, 0.8);\n  width: 480px;\n  margin: auto;\n  border: 2px outset black;\n  border-radius: 13px;\n  padding: 20px 28px;\n  margin-bottom: 28px;\n\n  button {\n    font-weight: bold;\n    margin-bottom: 28px;\n    padding: 4px 8px;\n    border-radius: 22px;\n    text-transform: uppercase;\n    background-color: rgba(144, 144, 144, 0.8);\n  }\n\n  button:hover,\n  button:focus {\n    background-color: black;\n    color: white;\n  }\n\n  label {\n    font-style: oblique;\n    font-weight: 500;\n    margin-bottom: 13px;\n\n    b {\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 500;\n      color: darkred;\n      text-transform: lowercase;\n    }\n\n    input {\n      margin-top: 8px;\n      width: 100%;\n      padding: 2px 13px;\n      border-radius: 13px;\n      outline: none;\n      text-align: center;\n      /* background-color: rgba(255, 255, 255, 0); */\n    }\n  }\n`;\n","import { ErrorMessage, Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/authOperations';\nimport { FormThumb } from './LoginForm.styled';\n\nconst formSchema = Yup.object({\n  email: Yup.string().email().required('Must be filled'),\n  password: Yup.string().min(8).required('Must be filled'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = { email: '', password: '' };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={formSchema}\n      onSubmit={async (values, actions) => {\n        try {\n          await dispatch(logIn({ ...values })).unwrap();\n          actions.resetForm();\n        } catch (error) {\n          console.error('Failed to login:', error);\n        }\n      }}\n    >\n      <FormThumb autoComplete=\"off\">\n        <label>\n          Email\n          <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n          <ErrorMessage name=\"email\" component=\"b\" />\n        </label>\n        <label>\n          Password\n          <Field\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n          />\n          <ErrorMessage name=\"password\" component=\"b\" />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </FormThumb>\n    </Formik>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\nimport LoginImage from '../images/login.jpg';\n\nexport const LoginGlobalStyle = createGlobalStyle`\nbody{\n    /* background-image: url('https://kartinki.pics/uploads/posts/2021-07/1625655405_50-kartinkin-com-p-biblioteka-art-art-krasivo-55.jpg'); */\n\n    background-image: url(${LoginImage});\n}`;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { LoginGlobalStyle } from './Login.styled';\nimport { Box } from 'components/GlobalStyle';\n\nexport default function Login() {\n  return (\n    <HelmetProvider>\n      <Box>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n\n        <h2>Login Form</h2>\n        <h5>Please sign up and let's work!!!</h5>\n        <LoginForm />\n\n        <LoginGlobalStyle />\n      </Box>\n    </HelmetProvider>\n  );\n}\n"],"names":["FormThumb","styled","Form","formSchema","Yup","email","required","password","min","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","async","values","actions","logIn","unwrap","resetForm","error","console","children","_jsxs","autoComplete","Field","type","name","placeholder","ErrorMessage","component","LoginGlobalStyle","createGlobalStyle","LoginImage","Login","HelmetProvider","Box","Helmet"],"sourceRoot":""}