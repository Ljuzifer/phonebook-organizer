{"version":3,"file":"static/js/309.49882133.chunk.js","mappings":"uNAGO,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCCKrC,MAAMC,EAAaC,EAAAA,GAAW,CAC5BC,KAAMD,EAAAA,KAAaE,SAAS,kBAC5BC,MAAOH,EAAAA,KAAaG,QAAQD,SAAS,kBACrCE,SAAUJ,EAAAA,KAAaK,IAAI,GAAGH,SAAS,oBAG1B,SAASI,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,6BACuBC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,SAAQH,SAAC,YAAc,eAE3DC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,cATgB,CAAEjB,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAUjDe,iBAAkBpB,EAClBqB,SAAUC,MAAOC,EAAQC,KAGvB,UACQhB,GAASiB,EAAAA,EAAAA,IAAS,IAAKF,KAAWG,SACxCF,EAAQG,YACRjB,EAAS,SAGX,CAFE,MAAOkB,GACPC,QAAQD,MAAM,sBAAuBA,EACvC,GACAd,UAEFF,EAAAA,EAAAA,MAACf,EAAS,CAACiC,aAAa,MAAKhB,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,SAAOV,KAAK,OAAMY,SAAA,CAAC,YAEjBC,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,OAAO9B,KAAK,OAAO+B,YAAY,qBAC3ClB,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAAChC,KAAK,OAAOiC,UAAU,UAEtCvB,EAAAA,EAAAA,MAAA,SAAOV,KAAK,QAAOY,SAAA,CAAC,SAElBC,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,QAAQ9B,KAAK,QAAQ+B,YAAY,sBAC7ClB,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAAChC,KAAK,QAAQiC,UAAU,UAEvCvB,EAAAA,EAAAA,MAAA,SAAOV,KAAK,WAAUY,SAAA,CAAC,YAErBC,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,WACL9B,KAAK,WACL+B,YAAY,yBAEdlB,EAAAA,EAAAA,KAACmB,EAAAA,GAAY,CAAChC,KAAK,WAAWiC,UAAU,UAE1CpB,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAAQlB,SAAC,oBAKhC,C,6DC5EasB,EAAgBC,EAAAA,EAAiB;;;;4BAIlBC;;gBCDb,SAASC,IACtB,OACExB,EAAAA,EAAAA,KAACyB,EAAAA,GAAc,CAAA1B,UACbF,EAAAA,EAAAA,MAAC6B,EAAAA,EAAG,CAAA3B,SAAA,EACFC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAM,CAAA5B,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAGTC,EAAAA,EAAAA,KAACR,EAAY,KACbQ,EAAAA,EAAAA,KAACqB,EAAa,QAItB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.styled.js","pages/Register.jsx"],"sourcesContent":["import { Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormThumb = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 13px;\n  background-color: rgba(202, 202, 202, 0.8);\n  width: 480px;\n  margin: auto;\n  border: 2px outset black;\n  border-radius: 13px;\n  padding: 20px 28px;\n  margin-bottom: 28px;\n\n  button {\n    font-weight: bold;\n    margin-bottom: 28px;\n    padding: 4px 8px;\n    border-radius: 22px;\n    text-transform: uppercase;\n    background-color: rgba(144, 144, 144, 0.8);\n  }\n\n  button:hover,\n  button:focus {\n    background-color: black;\n    color: white;\n  }\n\n  label {\n    font-style: oblique;\n    font-weight: 500;\n    margin-bottom: 13px;\n\n    b {\n      font-size: 13px;\n      font-style: normal;\n      font-weight: 500;\n      color: darkred;\n      text-transform: lowercase;\n    }\n\n    input {\n      margin-top: 8px;\n      width: 100%;\n      padding: 2px 13px;\n      border-radius: 13px;\n      outline: none;\n      text-align: center;\n      /* background-color: rgba(255, 255, 255, 0); */\n    }\n  }\n`;\n","import { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { FormThumb } from './RegisterForm.styled';\nimport { Link, useNavigate } from 'react-router-dom';\n// import LoadingSpinnerComponent from 'react-spinners-components';\n\nconst formSchema = Yup.object({\n  name: Yup.string().required('Must be filled'),\n  email: Yup.string().email().required('Must be filled'),\n  password: Yup.string().min(8).required('Must be filled'),\n});\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const form = e.currentTarget;\n  //   dispatch(\n  //     register({\n  //       name: form.elements.name.value,\n  //       email: form.elements.email.value,\n  //       password: form.elements.password.value,\n  //     })\n  //   );\n  //   form.reset();\n  // };\n\n  const initialValues = { name: '', email: '', password: '' };\n\n  return (\n    <>\n      <h2>Registration Form</h2>\n      <h5>\n        Have an account already? <Link to=\"/login\">Sign Up</Link> please!\n      </h5>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={formSchema}\n        onSubmit={async (values, actions) => {\n          // dispatch(register({ ...values }));\n          // actions.resetForm();\n          try {\n            await dispatch(register({ ...values })).unwrap();\n            actions.resetForm();\n            navigate('/login');\n          } catch (error) {\n            console.error('Failed to register:', error);\n          }\n        }}\n      >\n        <FormThumb autoComplete=\"off\">\n          <label name=\"name\">\n            Username\n            <Field type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\n            <ErrorMessage name=\"name\" component=\"b\" />\n          </label>\n          <label name=\"email\">\n            Email\n            <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n            <ErrorMessage name=\"email\" component=\"b\" />\n          </label>\n          <label name=\"password\">\n            Password\n            <Field\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <ErrorMessage name=\"password\" component=\"b\" />\n          </label>\n          <button type=\"submit\">Register</button>\n        </FormThumb>\n      </Formik>\n    </>\n  );\n}\n\n// {/* <LoadingSpinnerComponent type={'Gear'} color={'black'} size={'88px'} />; */}\n","import { createGlobalStyle } from 'styled-components';\nimport registerImage from '../images/register.jpg';\n\nexport const RegisterStyle = createGlobalStyle`\nbody{\n    /* background-image: url('https://kartinki.pics/uploads/posts/2021-07/thumbs/1625655412_56-kartinkin-com-p-biblioteka-art-art-krasivo-61.jpg'); */\n\n    background-image: url(${registerImage});\n}\n`;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegisterStyle } from './Register.styled';\nimport { Box } from 'components/GlobalStyle';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <Box>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n\n        <RegisterForm />\n        <RegisterStyle />\n      </Box>\n    </HelmetProvider>\n  );\n}\n"],"names":["FormThumb","styled","Form","formSchema","Yup","name","required","email","password","min","RegisterForm","dispatch","useDispatch","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","Link","to","Formik","initialValues","validationSchema","onSubmit","async","values","actions","register","unwrap","resetForm","error","console","autoComplete","Field","type","placeholder","ErrorMessage","component","RegisterStyle","createGlobalStyle","registerImage","Register","HelmetProvider","Box","Helmet"],"sourceRoot":""}